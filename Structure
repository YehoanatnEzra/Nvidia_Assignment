| Python File                   | Description                                                                                                                  |
| ----------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |
| **main.py**                   | CLI entry point: parses command-line arguments (log dir, events file, optional time filters) and invokes the `LogAnalyzer`.  |
| **log\_analyzer/entry.py**    | Defines `LogEntry`: data model for a single log line (timestamp, level, event type, message) and the `parse_line()` factory. |
| **log\_analyzer/config.py**   | Defines `EventConfig` (dataclass for one rule) and `load_configs()` to read & parse the events file.                         |
| **log\_analyzer/filter.py**   | Defines `EventFilter`: wraps an `EventConfig` and exposes `matches(LogEntry)` to test entries.                               |
| **log\_analyzer/analyzer.py** | Implements `LogAnalyzer`: loads configs, gathers & filters `LogEntry` objects, and reports counts or matching lines.         |
| **log\_analyzer/cache.py**    | Implements `CacheEngine`: simple wrapper around `functools.lru_cache` (and pluggable backends) for caching expensive calls.  |
| **tests/test\_entry.py**      | Unit tests for `LogEntry.parse_line()` and its error handling.                                                               |
| **tests/test\_config.py**     | Unit tests for `load_configs()` and validation of `EventConfig` parsing.                                                     |
| **tests/test\_filter.py**     | Unit tests for `EventFilter.matches()` under various rule combinations.                                                      |
| **tests/test\_analyzer.py**   | End-to-end tests for `LogAnalyzer.run()`, including CLI args, time filtering, and output formatting.                         |
| **tests/test\_cache.py**      | Unit tests for `CacheEngine.cache()` behavior and cache invalidation.                                                        |
